{"version":3,"sources":["pages/Home/index.js","pages/Explorer/index.js","components/LoadingModal.js","xrpl.js","util.js","graph.js","components/CreateNodeModal.js","components/CreateTrustLineModal.js","pages/Builder/index.js","pages/Validator/index.js","App.js","reportWebVitals.js","index.js"],"names":["Explorer","history","useHistory","navigate","path","push","className","onClick","type","serialized","JSON","parse","localStorage","getItem","nodes","links","svgRef","React","useRef","useEffect","color","d3","label","forEach","d","i","node","source","target","labelLayout","force","strength","distance","graphLayout","window","innerWidth","innerHeight","id","on","call","updateNode","link","updateLink","alphaTarget","restart","labelNode","each","x","y","b","this","getBBox","diffX","diffY","dist","Math","sqrt","shiftX","width","max","min","setAttribute","adjlist","neigh","a","index","svg","attr","container","append","style","scaleExtent","event","transform","selectAll","data","enter","group","datum","o","document","getElementById","bootstrap","title","content","stringify","rippleState","show","getInstance","dispose","sourceEvent","stopPropagation","active","fx","fy","text","fixna","isFinite","remove","ref","height","LoadingModal","LAST_VALIDATED_LEDGER","handleClose","Modal","onHide","Header","Title","Body","minHeight","sleep","ms","Promise","resolve","setTimeout","api","RippleAPI","server","createAccount","address","generateAddress","test","axios","method","headers","destination","classicAddress","xrpAmount","blackhole","account","prepareSettings","xAddress","regularKey","disableMasterKey","defaultRipple","preparedTx","getLedgerVersion","latestLedgerVersion","maxLedgerVersion","instructions","response","sign","txJSON","secret","txID","txBlob","signedTransaction","submit","result","console","log","earliestLedgerVersion","validateTransaction","hasTrustLine","counterparty","getTrustlines","trustlines","some","trustline","specification","createTrustLine","tx","currency","limit","qualityIn","qualityOut","ripplingDisabled","frozen","memos","format","prepareTrustline","resultCode","resultMessage","enableRippling","prepared","checkTransaction","setInterval","getTransaction","minLedgerVersion","clearInterval","outcome","message","getTrustLines","deleteAccount","prepareTransaction","TransactionType","fee","makePayment","sender","receiver","amount","Account","Amount","Destination","LastLedgerSequence","ledger","ledgerVersion","saved","graph","Graph","createNode","accounts","newAccounts","setItem","Error","addNode","serialize","createEdge","addEdge","setEdgeWeight","adjacent","edge","removeEdge","removeNode","updateEdges","CreateNodeModal","useState","loading","setLoading","blackholed","setData","handleSave","connect","disconnect","Form","Group","controlId","Label","Control","onChange","value","toUpperCase","replace","name","Check","checked","Footer","Button","variant","disabled","CreateTrustLineModal","selectedNode","setTarget","setLimit","FloatingLabel","as","aria-label","Object","keys","map","InputGroup","FormControl","Builder","inputRef","useRouteMatch","importType","setImportType","undefined","setSelectedNode","showLoadingModal","setShowLoadingModal","showCreateNodeModal","setShowNodeModal","showTrustLineModal","setShowTrustLineModal","accountTrustLines","setAccountTrustLines","setAccounts","hasAccounts","length","location","useLocation","fileUploadInputChange","reader","FileReader","onload","onReaderLoad","readAsText","files","blackholeAccount","trustLines","pathname","match","RegExp","split","ListGroup","Item","hidden","current","click","exact","Validator","query","URLSearchParams","search","get","setAccount","destinationCurrency","setDestinationCurrency","destinationValue","setDestinationValue","destinationIssuer","setDestinationIssuer","sendMaxCurrency","setSendMaxCurrency","sendMaxValue","setSendMaxValue","sendMaxIssuer","setSendMaxIssuer","setDestination","paths","setPaths","WEBSOCKET_SERVER","ws","WebSocket","onopen","send","command","destination_account","destination_amount","issuer","source_account","subcommand","onmessage","onclose","close","toString","alert","onChangeAccount","onChangeDestination","onChangeDestinationAmount","onChangeDestinationCurrency","onChangeDestinationIssuer","onChangeSendMaxValue","onChangeSendMaxCurrency","onChangeSendMaxIssuer","Row","Col","defaultValue","App","href","Badge","bg","pill","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","activeClassName","aria-current","to","dataStr","encodeURIComponent","downloadAnchorNode","createElement","body","appendChild","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1266a95e.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nfunction Explorer() {\n  const history = useHistory()\n\n  const navigate = (path) => {\n    history.push(path)\n  }\n\n  return (\n    <div className=\"container py-4\">\n      <div className=\"p-5 mb-4 bg-light rounded-3 mt-5\">\n        <div className=\"container-fluid py-5\">\n          <h1 className=\"display-5 fw-bold\">Introducing RippleGraph</h1>\n          <p className=\"col-md-8 fs-4\">RippleGraph is an open-source XRP Ledger graph composer. It lets you easily build topologies of interconnected accounts and send payments between them.</p>\n          <button className=\"btn btn-primary btn-lg\" onClick={() => navigate(\"/builder\")}>Start Building</button>\n        </div>\n      </div>\n      <div className=\"row align-items-md-stretch\">\n        <div className=\"col-md-6\">\n          <div className=\"h-100 p-5 text-white bg-dark rounded-3\">\n            <h2>View the Graph</h2>\n            <p>Visualize a network graph with the graph explorer.</p>\n            <button className=\"btn btn-outline-light\" type=\"button\" onClick={() => navigate(\"/explorer\")}>Explore</button>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <div className=\"h-100 p-5 bg-light rounded-3\">\n            <h2>Validate Paths</h2>\n            <p>Check for valid paths and execute payments against them.</p>\n            <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => navigate(\"/validator\")}>Validate</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Explorer;\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as bootstrap from \"bootstrap\"\nimport './index.css';\n\nfunction Explorer() {\n  const serialized = JSON.parse(localStorage.getItem(\"graph\")) || { nodes: [], links: [] }\n  const svgRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    // ?\n    const label = {\n      'nodes': [],\n      'links': []\n    };\n    \n    // ?\n    serialized.nodes.forEach(function(d, i) {\n      label.nodes.push({ node: d });\n      label.nodes.push({ node: d });\n      label.links.push({\n        source: i * 2,\n        target: i * 2 + 1\n      });\n    });\n\n    var labelLayout = d3.forceSimulation(label.nodes)\n      .force(\"charge\", d3.forceManyBody().strength(-50))\n      .force(\"link\", d3.forceLink(label.links).distance(0).strength(2));\n\n    var graphLayout = d3.forceSimulation(serialized.nodes)\n      .force(\"charge\", d3.forceManyBody().strength(-3000))\n      .force(\"center\", d3.forceCenter(window.innerWidth / 2, window.innerHeight / 2))\n      .force(\"x\", d3.forceX(window.innerWidth / 2).strength(1))\n      .force(\"y\", d3.forceY(window.innerHeight / 2).strength(1))\n      .force(\"link\", d3.forceLink(serialized.links).id(function(d) { return d.id; }).distance(50).strength(1))\n      .on(\"tick\", ticked);\n\n    var adjlist = [];\n\n    serialized.links.forEach(function(d) {\n      adjlist[d.source.index + \"-\" + d.target.index] = true;\n      adjlist[d.target.index + \"-\" + d.source.index] = true;\n    });\n    \n    /**\n     * @function neigh\n     * @param {*} a \n     * @param {*} b \n     * @returns \n     */\n    function neigh(a, b) {\n      return a === b || adjlist[a + \"-\" + b];\n    }\n    \n    // Create graph container\n    var svg = d3.select(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n    var container = svg.append(\"g\");\n\n    // Define the arrowhead graphic\n    svg.append(\"defs\").append(\"marker\")\n      .attr(\"id\", \"arrowhead\")\n      .attr(\"viewBox\", \"-0 -5 35 10\")\n      .attr(\"refX\", 20)\n      .attr(\"refY\", 0)\n      .attr(\"orient\", \"auto\")\n      .attr(\"markerWidth\", 15)\n      .attr(\"markerHeight\", 15)\n      .attr(\"xoverflow\", \"visible\")\n      .append(\"svg:path\")\n      .attr(\"d\", \"M 0,-5 L 10 ,0 L 0,5\")\n      .attr(\"fill\", \"#999\")\n      .style(\"stroke\", \"none\");\n    \n    // Define zoom settings\n    svg.call(\n      d3.zoom()\n        .scaleExtent([.1, 4])\n        .on(\"zoom\", function(event) { container.attr(\"transform\", event.transform); })\n    );\n    \n    // Create links\n    var link = container.append(\"g\").attr(\"class\", \"links\")\n      .selectAll(\"line\")\n      .data(serialized.links)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke\", \"#aaa\")\n      .attr(\"stroke-width\", \"1px\")\n      .attr(\"id\", function(d, i) { return \"link-\" + i })\n      .attr('marker-end', 'url(#arrowhead)');\n\n    // Create nodes\n    var node = container.append(\"g\").attr(\"class\", \"nodes\")\n      .selectAll(\"g\")\n      .data(serialized.nodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"fill\", function(d) { return color(d.group); })\n    \n    // Events\n    node.on(\"mouseover\", focus).on(\"mouseout\", unfocus);\n    link.on(\"mouseover\", showRippleState).on(\"mouseout\", hideRippleState);\n    \n    node.call(\n      d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended)\n    );\n\n    // Label the nodes\n    var labelNode = container.append(\"g\").attr(\"class\", \"labelNodes\")\n      .selectAll(\"text\")\n      .data(label.nodes)\n      .enter()\n      .append(\"text\")\n      .text(function(d, i) { return i % 2 === 0 ? \"\" : d.node.id; })\n      .style(\"fill\", \"#555\")\n      .style(\"font-family\", \"Arial\")\n      .style(\"font-size\", 12)\n      .style(\"pointer-events\", \"none\"); // to prevent mouseover/drag capture\n    \n    /**\n     * @function ticked\n     */\n    function ticked() {\n    \n      node.call(updateNode);\n      link.call(updateLink);\n    \n      labelLayout.alphaTarget(0.3).restart();\n      labelNode.each(function(d, i) {\n        if(i % 2 === 0) {\n          d.x = d.node.x;\n          d.y = d.node.y;\n        } else {\n          var b = this.getBBox();\n    \n          var diffX = d.x - d.node.x;\n          var diffY = d.y - d.node.y;\n\n          var dist = Math.sqrt(diffX * diffX + diffY * diffY);\n\n          var shiftX = b.width * (diffX - dist) / (dist * 2);\n          shiftX = Math.max(-b.width, Math.min(0, shiftX));\n          var shiftY = 16;\n          this.setAttribute(\"transform\", \"translate(\" + shiftX + \",\" + shiftY + \")\");\n        }\n      });\n      labelNode.call(updateNode);\n    }\n    \n    /**\n     * @function fixna\n     * @param {*} x \n     * @returns \n     */\n    function fixna(x) {\n      if (isFinite(x)) return x;\n      return 0;\n    }\n    \n    /**\n     * @function focus\n     * @param {*} event \n     * @param {*} d \n     */\n    function focus(event, d) {\n      var index = d3.select(event.target).datum().index;\n      node.style(\"opacity\", function(o) {\n        return neigh(index, o.index) ? 1 : 0.1;\n      });\n      labelNode.attr(\"display\", function(o) {\n      return neigh(index, o.node.index) ? \"block\": \"none\";\n      });\n      link.style(\"opacity\", function(o) {\n        return o.source.index === index || o.target.index === index ? 1 : 0.1;\n      });\n    }\n    \n    /**\n     * @function unfocus\n     */\n    function unfocus() {\n      labelNode.attr(\"display\", \"block\");\n      node.style(\"opacity\", 1);\n      link.style(\"opacity\", 1);\n    }\n\n    /**\n     * @function showRippleState\n     * @param {*} event \n     * @param {*} d \n     */\n    function showRippleState(event, d) {\n      var link = document.getElementById(event.target.id)\n      var popover = new bootstrap.Popover(link, {\n        title: \"RippleState\",\n        content: `${JSON.stringify(d.rippleState, null, 2)}`\n      })\n      popover.show()\n    }\n\n    /**\n     * @function hideRippleState\n     * @param {*} event \n     * @param {*} d \n     */\n    function hideRippleState(event, d) {\n      var link = document.getElementById(event.target.id)\n      var popover = bootstrap.Popover.getInstance(link)\n      popover.dispose()\n    }\n    \n    /**\n     * @function updateLink\n     * @param {*} link \n     */\n    function updateLink(link) {\n      link.attr(\"x1\", function(d) { return fixna(d.source.x); })\n        .attr(\"y1\", function(d) { return fixna(d.source.y); })\n        .attr(\"x2\", function(d) { return fixna(d.target.x); })\n        .attr(\"y2\", function(d) { return fixna(d.target.y); });\n    }\n    \n    /**\n     * @function updateNode\n     * @param {*} node \n     */\n    function updateNode(node) {\n      node.attr(\"transform\", function(d) {\n        return \"translate(\" + fixna(d.x) + \",\" + fixna(d.y) + \")\";\n      });\n    }\n    \n    /**\n     * @function dragstarted\n     * @param {*} event \n     * @param {*} d \n     */\n    function dragstarted(event, d) {\n      event.sourceEvent.stopPropagation();\n      if (!event.active) graphLayout.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    /**\n     * @function dragged\n     * @param {*} event \n     * @param {*} d \n     */\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    /**\n     * @function dragended\n     * @param {*} event \n     * @param {*} d \n     */\n    function dragended(event, d) {\n      if (!event.active) graphLayout.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    return () => { d3.selectAll(\"svg > *\").remove(); }\n  }, [])\n\n  return (\n    <svg ref={svgRef} width=\"100vw\" height=\"100vh\" className=\"Graph\" />\n  );\n}\n\nexport default Explorer;\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\"\n\nfunction LoadingModal({ show, handleClose }) {\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header>\n        <Modal.Title>In Progress...</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: 200 }}>\n          <span className=\"fa fa-spin fa-spinner fa-3x\" />\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default LoadingModal;\n","import { RippleAPI } from \"ripple-lib\"\nimport axios from \"axios\"\nimport { sleep } from \"./util\"\n\nlet LAST_VALIDATED_LEDGER;\n\nexport const api = new RippleAPI({\n  server: 'wss://s.altnet.rippletest.net:51233'\n});\n\napi.on(\"ledger\", async (ledger) => {\n  LAST_VALIDATED_LEDGER = ledger.ledgerVersion\n  console.log(\"Ledger version\", ledger.ledgerVersion, \"was validated.\")\n})\n\nexport async function createAccount() {\n  const address = api.generateAddress({ test: true })\n  await axios(\"https://faucet.altnet.rippletest.net/accounts\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: {\n      destination: address.classicAddress,\n      xrpAmount: \"100\"\n    }\n  })\n  await sleep(10000)\n  return address\n}\n\nexport async function blackhole(account) {\n  const ACCOUNT_ONE = \"rrrrrrrrrrrrrrrrrrrrBZbvji\";\n  const preparedTx = await api.prepareSettings(account.xAddress, {\n    regularKey: ACCOUNT_ONE,\n    disableMasterKey: true,\n    defaultRipple: true\n  });\n  const latestLedgerVersion = await api.getLedgerVersion();\n  const maxLedgerVersion = preparedTx.instructions.maxLedgerVersion;\n  const response = api.sign(preparedTx.txJSON, account.secret);\n  const txID = response.id;\n  const txBlob = response.signedTransaction;\n  const result = await api.submit(txBlob);\n  console.log(result)\n  const earliestLedgerVersion = latestLedgerVersion + 1;\n  return await validateTransaction(\n    txID,\n    earliestLedgerVersion,\n    maxLedgerVersion\n  );\n}\n\nexport async function hasTrustLine(address, counterparty) {\n  const trustlines = await api.getTrustlines(address)\n  return trustlines.some(trustline => trustline.specification.counterparty === counterparty)\n}\n\nexport async function createTrustLine(account, counterparty) {\n  console.log(`Creating trust line from ${account.address} to ${counterparty}`)\n  const tx = {\n    currency: \"AUR\",\n    counterparty: counterparty,\n    limit: \"999999999\",\n    qualityIn: 1,\n    qualityOut: 1,\n    ripplingDisabled: false,\n    frozen: false,\n    memos: [\n      {\n        type: \"test\",\n        format: \"text/plain\",\n        data: \"Apex Dev Summit\"\n      }\n    ]\n  }\n  const preparedTx = await api.prepareTrustline(account.address, tx)\n  const maxLedgerVersion = preparedTx.instructions.maxLedgerVersion\n  const response = api.sign(preparedTx.txJSON, account.secret)\n  const txID = response.id\n  console.log(\"Identifying hash:\", txID)\n  const txBlob = response.signedTransaction\n  console.log(\"Signed blob:\", txBlob)\n  const result = await api.submit(txBlob)\n  console.log(\"Tentative result code:\", result.resultCode)\n  console.log(\"Tentative result message:\", result.resultMessage)\n  const latestLedgerVersion = await api.getLedgerVersion()\n  const earliestLedgerVersion = latestLedgerVersion + 1\n  await validateTransaction(\n    txID,\n    earliestLedgerVersion,\n    maxLedgerVersion\n  )\n}\n\nexport async function enableRippling(account) {\n  console.log(`Enabling rippling for ${account.address}`)\n  const prepared = await api.prepareSettings(account.address, { defaultRipple: true })\n  const maxLedgerVersion = prepared.instructions.maxLedgerVersion\n  const response = api.sign(prepared.txJSON, account.secret)\n  const txID = response.id\n  const txBlob = response.signedTransaction\n  const result = await api.submit(txBlob)\n  console.log(result.resultCode, result.resultMessage)\n  const latestLedgerVersion = await api.getLedgerVersion()\n  const earliestLedgerVersion = latestLedgerVersion + 1\n  await validateTransaction(\n    txID,\n    earliestLedgerVersion,\n    maxLedgerVersion\n  )\n}\n\nexport async function validateTransaction(\n  txID,\n  earliestLedgerVersion,\n  maxLedgerVersion\n) {\n  return new Promise((resolve) => {\n    const checkTransaction = setInterval(async () => {\n      try {\n        const tx = await api.getTransaction(txID, {\n          minLedgerVersion: earliestLedgerVersion\n        })\n        clearInterval(checkTransaction)\n        if (tx.outcome.result !== \"tesSUCCESS\") resolve(false)\n        resolve(tx)\n      } catch (error) {\n        const message =\n          \"Transaction has not been validated yet; try again later\"\n        if (error.message === message) return\n      }\n\n      if (LAST_VALIDATED_LEDGER > maxLedgerVersion) {\n        clearInterval(checkTransaction)\n        resolve(false)\n      }\n    }, 1000)\n  })\n}\n\nexport async function getSettings(address) {\n  return await api.getSettings(address)\n}\n\n/**\n * @function getTrustLines\n */\n export async function getTrustLines(address) {\n  return await api.getTrustlines(address)\n}\n\nexport async function deleteAccount(account) {\n  const preparedTx = await api.prepareTransaction({\n    TransactionType: \"AccountDelete\"\n  })\n  const maxLedgerVersion = preparedTx.instructions.maxLedgerVersion\n  console.log(\"preparedTx:\", preparedTx)\n  console.log(\"Transaction cost:\", preparedTx.instructions.fee, \"XRP\")\n  console.log(\"Transaction expires after ledger:\", maxLedgerVersion)\n  const response = api.sign(preparedTx.txJSON, account.secret)\n  const txID = response.id\n  console.log(\"Identifying hash:\", txID)\n  const txBlob = response.signedTransaction\n  console.log(\"Signed blob:\", txBlob)\n  const result = await api.submit(txBlob)\n  console.log(\"Tentative result code:\", result.resultCode)\n  console.log(\"Tentative result message:\", result.resultMessage)\n  const latestLedgerVersion = await api.getLedgerVersion()\n  const earliestLedgerVersion = latestLedgerVersion + 1\n  await validateTransaction(\n    txID,\n    earliestLedgerVersion,\n    maxLedgerVersion\n  )\n}\n\nexport async function makePayment(\n  sender,\n  receiver,\n  amount\n) {\n  let latestLedgerVersion = await api.getLedgerVersion()\n  const tx = {\n    TransactionType: \"Payment\",\n    Account: sender.address,\n    Amount: amount,\n    Destination: receiver,\n    LastLedgerSequence: latestLedgerVersion + 15\n  }\n  const preparedTx = await api.prepareTransaction(tx)\n  const maxLedgerVersion = preparedTx.instructions.maxLedgerVersion\n  console.log(\"preparedTx:\", preparedTx)\n  console.log(\"Transaction cost:\", preparedTx.instructions.fee, \"XRP\")\n  console.log(\"Transaction expires after ledger:\", maxLedgerVersion)\n  const response = api.sign(preparedTx.txJSON, sender.secret)\n  const txID = response.id\n  console.log(\"Identifying hash:\", txID)\n  const txBlob = response.signedTransaction\n  console.log(\"Signed blob:\", txBlob)\n  latestLedgerVersion = await api.getLedgerVersion()\n  const result = await api.submit(txBlob)\n  if (result.resultCode !== \"tesSUCCESS\") return result\n  console.log(\"Tentative result code:\", result.resultCode)\n  console.log(\"Tentative result message:\", result.resultMessage)\n  const earliestLedgerVersion = latestLedgerVersion + 1\n  return await validateTransaction(\n    txID,\n    earliestLedgerVersion,\n    maxLedgerVersion\n  )\n}","export function sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}","import Graph from \"graph-data-structure\";\nimport {\n  createAccount,\n  hasTrustLine,\n  createTrustLine,\n  enableRippling,\n  deleteAccount,\n  makePayment\n} from \"./xrpl\"\n\nconst saved = window.localStorage.getItem(\"graph\")\nconst graph = Graph(JSON.parse(saved));\n\n/**\n * @function createNode\n * @param {*} data \n */\nexport async function createNode(data) {\n  const { id, defaultRipple } = data;\n  let accounts = window.localStorage.getItem(\"accounts\")\n\n  if (!accounts) {\n    accounts = {}\n  } else {\n    accounts = JSON.parse(accounts)\n  }\n\n  if (!accounts[id]) {\n    const account = await createAccount()\n    if (!defaultRipple) await enableRippling(account)\n    accounts[id] = { account, ...data }\n    const newAccounts = JSON.stringify(accounts, null, 2);\n    window.localStorage.setItem(\"accounts\", newAccounts)\n    console.log(`${id}:`, account.address)\n  } else {\n    throw Error(\"An account with this ID already exists.\")\n  }\n  graph.addNode(id);\n  window.localStorage.setItem(\"graph\", JSON.stringify(graph.serialize()))\n}\n\n/**\n * @function createEdge\n * @param {*} source \n * @param {*} target \n * @param {*} limit \n */\nexport async function createEdge(source, target, limit) {\n  let accounts = window.localStorage.getItem(\"accounts\")\n\n  if (!accounts) {\n    accounts = {}\n  } else {\n    accounts = JSON.parse(accounts)\n  }\n\n  if (!await hasTrustLine(accounts[source].account.address, accounts[target].account.address)) {\n    await createTrustLine(accounts[source].account, accounts[target].account.address)\n  }\n  graph.addEdge(source, target);\n  graph.setEdgeWeight(source, target, 0)\n  window.localStorage.setItem(\"graph\", JSON.stringify(graph.serialize()))\n}\n\n/**\n * @function removeNode\n * @param {*} id \n */\nexport async function removeNode(id) {\n  let accounts = JSON.parse(window.localStorage.getItem(\"accounts\"))\n  await deleteAccount(accounts[id].account)\n  const edges = graph.adjacent(id)\n  edges.forEach(edge => {\n    graph.removeEdge(id, edge)\n  })\n  graph.removeNode(id)\n  window.localStorage.setItem(\"graph\", JSON.stringify(graph.serialize()))\n  delete accounts[id]\n  window.localStorage.setItem(\"accounts\", JSON.stringify(accounts))\n}\n\n/**\n * @function updateEdges\n * @param {*} source \n * @param {*} destination \n * @param {*} amount \n * @returns \n */\nexport async function updateEdges(source, destination, amount) {\n  const tx = await makePayment(source, destination, amount)\n  // Update edges based on the result\n  console.log(tx)\n  return tx\n}\n\nexport default graph","import React from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\"\nimport { createNode } from \"../graph\"\nimport { api } from \"../xrpl\"\n\nfunction CreateNodeModal({ show, handleClose }) {\n  const [loading, setLoading] = React.useState(false)\n  const [data, setData] = React.useState({\n    id: \"\",\n    defaultRipple: false,\n    blackholed: false\n  })\n\n  const onChangeInput = (event) => {\n    event.target.value = event.target.value.toUpperCase().replace(\" \", \"_\").replace(/[\\W]+/g, \"\");\n    setData({\n      ...data,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  const onChangeCheckbox = (event) => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.checked\n    })\n  }\n\n  const handleSave = async () => {\n    setLoading(true)\n    await api.connect()\n    await createNode(data)\n    await api.disconnect()\n    setLoading(false)\n    handleClose()\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header>\n        <Modal.Title>Create Node</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"node.Id\">\n            <Form.Label>Identifier</Form.Label>\n            <Form.Control type=\"text\" onChange={onChangeInput} name=\"id\" />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"node.defaultRipple\">\n            <Form.Check\n              name=\"defaultRipple\"\n              type=\"checkbox\"\n              label={\"No Ripple\"}\n              onChange={onChangeCheckbox}\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose} disabled={loading}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSave} disabled={loading}>\n          { loading ? <i className=\"fas fa-spin fa-spinner\"></i> : \"Save\" }\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default CreateNodeModal;\n","import React from \"react\";\nimport { Button, Form, Modal, FloatingLabel, InputGroup, FormControl } from \"react-bootstrap\"\nimport { createEdge } from \"../graph\"\n\nfunction CreateTrustLineModal({ show, handleClose, selectedNode }) {\n  const accounts = JSON.parse(localStorage.getItem(\"accounts\")) || {}\n  const [loading, setLoading] = React.useState(false)\n  const [target, setTarget] = React.useState()\n  const [limit, setLimit] = React.useState(0)\n\n  const onChangeTarget = (event) => {\n    event.target.value = event.target.value.toUpperCase().replace(\" \", \"_\").replace(/[\\W]+/g, \"\");\n    setTarget(event.target.value)\n  }\n\n  const onChangeLimit = (event) => {\n    setLimit(event.target.value)\n  }\n\n  const handleSave = async () => {\n    setLoading(true)\n    await createEdge(selectedNode, target, limit)\n    setLoading(false)\n    setLimit(0)\n    handleClose()\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header>\n        <Modal.Title>Create Trust Line</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Source Node</Form.Label>\n            <Form.Control type=\"text\" name=\"source\" value={selectedNode} disabled={true} />\n          </Form.Group>\n          <Form.Group className=\"mb-3\">\n            <FloatingLabel controlId=\"floatingSelect\" label=\"Target Node\">\n              <Form.Control as=\"select\" aria-label=\"Target Node\" onChange={onChangeTarget}>\n                <option>Select a target node</option>\n                {\n                  (() => {\n                    return Object.keys(accounts).map(account => (\n                      <option key={account} value={account}>{account}</option>\n                    ))\n                  })()\n                }\n              </Form.Control>\n            </FloatingLabel>\n          </Form.Group>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              type=\"number\"\n              onChange={onChangeLimit}\n              value={limit}\n            />\n            <Button variant=\"outline-secondary\" onClick={() => setLimit(999999999)}>\n              Max\n            </Button>\n          </InputGroup>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose} disabled={loading}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSave} disabled={loading}>\n          { loading ? <i className=\"fas fa-spin fa-spinner\"></i> : \"Save\" }\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default CreateTrustLineModal;\n","import React from \"react\";\nimport { Switch, Route, useRouteMatch, useLocation, useHistory } from \"react-router-dom\";\nimport { Button, ListGroup } from \"react-bootstrap\"\nimport LoadingModal from \"../../components/LoadingModal\";\nimport CreateNodeModal from \"../../components/CreateNodeModal\";\nimport CreateTrustLineModal from \"../../components/CreateTrustLineModal\";\nimport { api, getTrustLines, blackhole } from \"../../xrpl\"\nimport { removeNode } from \"../../graph\"\nimport \"./index.css\"\n\nfunction Builder() {\n  const history = useHistory();\n  const inputRef = React.useRef()\n  const { path } = useRouteMatch();\n  const [importType, setImportType] = React.useState()\n  const [selectedNode, setSelectedNode] = React.useState(undefined)\n  const [showLoadingModal, setShowLoadingModal] = React.useState(false);\n  const [showCreateNodeModal, setShowNodeModal] = React.useState(false);\n  const [showTrustLineModal, setShowTrustLineModal] = React.useState(false);\n  const [accountTrustLines, setAccountTrustLines] = React.useState(undefined)\n  const [accounts, setAccounts] = React.useState(JSON.parse(localStorage.getItem(\"accounts\")) || {});\n  const hasAccounts = Object.keys(accounts).length !== 0\n  const location = useLocation();\n\n  const handleCloseCreateNodeModal = () => {\n    setShowNodeModal(false);\n    setAccounts(JSON.parse(localStorage.getItem(\"accounts\")))\n  }\n  const handleShowNodeModal = () => setShowNodeModal(true);\n\n  const handleCloseTrustLineModal = () => {\n    setShowTrustLineModal(false);\n    setAccounts(JSON.parse(localStorage.getItem(\"accounts\")))\n  }\n  const handleShowTrustLineModal = () => setShowTrustLineModal(true);\n\n  const goToValidator = () => {\n    history.push(`/validator?account=${selectedNode}`);\n  }\n\n  const importGraph = () => {\n    setImportType(\"graph\")\n    inputRef.current.click()\n  }\n\n  const importAccounts = () => {\n    setImportType(\"accounts\")\n    inputRef.current.click()\n  }\n\n  const fileUploadInputChange = (event) => {\n    const reader = new FileReader();\n    reader.onload = onReaderLoad;\n    reader.readAsText(event.target.files[0]);\n  }\n\n  function onReaderLoad(event) {\n    const result = JSON.parse(JSON.parse(event.target.result));\n    localStorage.setItem(importType, JSON.stringify(result))\n  }\n\n  const blackholeAccount = async () => {\n    setShowLoadingModal(true)\n    await blackhole(accounts[selectedNode].account)\n    accounts[selectedNode].blackholed = true\n    localStorage.setItem(\"accounts\", JSON.stringify(accounts))\n    setAccounts(accounts)\n    setShowLoadingModal(false)\n  }\n\n  const handleCloseLoadingModal = () => setShowLoadingModal(false)\n\n  /**\n   * Fetch node info when selected\n   */\n  React.useEffect(() => {\n    (async () => {\n      if (selectedNode && accounts[selectedNode]) {\n        await api.connect()\n        const trustLines = await getTrustLines(accounts[selectedNode].account.address)\n        setAccountTrustLines(trustLines)\n        await api.disconnect()\n      }\n    })()\n  }, [selectedNode, accounts])\n\n  /**\n   * Check if a node is already selected on page load\n   */\n  React.useEffect(() => {\n    if (location.pathname.match(new RegExp(\"/builder/*.\"))) {\n      setSelectedNode(location.pathname.split(\"/\")[2])\n    }\n  }, [location.pathname])\n\n  return (\n    <div className=\"container-fluid mt-5\">\n      <LoadingModal show={showLoadingModal} handleClose={handleCloseLoadingModal} />\n      <CreateNodeModal show={showCreateNodeModal} handleClose={handleCloseCreateNodeModal} />\n      <CreateTrustLineModal show={showTrustLineModal} handleClose={handleCloseTrustLineModal} selectedNode={selectedNode} />\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          <h4>Nodes</h4>\n          <p className=\"text-muted\">Please select a node from the list below or create a new node.</p>\n          <ListGroup as=\"ul\">\n            {\n              hasAccounts ? (\n                Object.keys(accounts).map(id => (\n                  <ListGroup.Item as=\"li\" active={location.pathname === `/builder/${id}`} key={id} onClick={() => { setSelectedNode(id); history.push(`/builder/${id}`) }}>\n                    {id}\n                  </ListGroup.Item>\n                ))\n              ) : (\n                \"No nodes created.\"\n              )\n            }\n          </ListGroup>\n          <div className=\"row\">\n            <div className=\"d-grid gap-1 col-6\">\n              <Button variant=\"secondary\" className=\"mt-5\" onClick={handleShowNodeModal}>\n                Create Node\n              </Button>\n            </div>\n            <div className=\"col-6\">\n              <div className=\"d-grid gap-1\">\n                <input type=\"file\" hidden ref={inputRef} onChange={fileUploadInputChange} />\n                <Button variant=\"secondary\" className=\"mt-5\" onClick={importGraph}>\n                  Import Graph\n                </Button>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"d-grid gap-1\">\n                <input type=\"file\" hidden ref={inputRef} onChange={fileUploadInputChange} />\n                <Button variant=\"secondary\" className=\"mt-5\" onClick={importAccounts}>\n                  Import Accounts\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6 bg-light px-5 py-5\">\n          <Switch>\n            <Route exact path={path}>\n              <div className=\"d-flex justify-content-center align-items-center h-100\">\n                Select a node to view info.\n              </div>\n            </Route>\n            <Route path={`${path}/:nodeId`}>\n              <h5>Account</h5>\n                <pre>\n                  {JSON.stringify(accounts[selectedNode], null, 2)}\n                </pre>\n              <h5 className=\"mt-5\">Trust Lines</h5>\n              {\n                accountTrustLines ? (\n                  <pre>\n                    {JSON.stringify(accountTrustLines, null, 2)}\n                  </pre>\n                ) : (\n                  \"No account trust lines.\"\n                )\n              }\n            </Route>\n          </Switch>\n        </div>\n        <div className=\"col-md-3\">\n          <h4 className=\"mb-3\">Actions</h4>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" className=\"mb-3\" disabled={!selectedNode} onClick={handleShowTrustLineModal}>\n              Create Trust Line\n            </Button>\n          </div>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" className=\"mb-3\" disabled={!selectedNode} onClick={goToValidator}>\n              Send Payment\n            </Button>\n          </div>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" className=\"mb-3\" disabled={!selectedNode} onClick={blackholeAccount}>\n              Blackhole Account\n            </Button>\n          </div>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" className=\"mb-3\" disabled={!selectedNode} onClick={() => { removeNode(selectedNode) }}>\n              Delete Account\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Builder;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Button, Form, Row, Col } from \"react-bootstrap\"\nimport { updateEdges } from \"../../graph\"\nimport { api } from \"../../xrpl\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction Validator() {\n  const query = useQuery();\n  const [loading, setLoading] = React.useState(false)\n  const [account, setAccount] = React.useState(query.get(\"account\"))\n  const [destinationCurrency, setDestinationCurrency] = React.useState(\"AUR\")\n  const [destinationValue, setDestinationValue] = React.useState(1)\n  const [destinationIssuer, setDestinationIssuer] = React.useState(\"\")\n  const [sendMaxCurrency, setSendMaxCurrency] = React.useState(\"AUR\")\n  const [sendMaxValue, setSendMaxValue] = React.useState(1)\n  const [sendMaxIssuer, setSendMaxIssuer] = React.useState(\"\")\n  const [destination, setDestination] = React.useState(\"\")\n  const accounts = JSON.parse(localStorage.getItem(\"accounts\"))\n  const [paths, setPaths] = React.useState()\n\n  React.useEffect(() => {\n    const WEBSOCKET_SERVER = \"wss://s.altnet.rippletest.net:51233/\"\n    const ws = new WebSocket(WEBSOCKET_SERVER)\n\n    ws.onopen = () => {\n      if (account && destination && destinationIssuer && sendMaxIssuer)\n      ws.send(JSON.stringify({\n        command: \"path_find\",\n        destination_account: accounts[destination].account.address,\n        destination_amount: {\n          value: destinationValue,\n          currency: destinationCurrency,\n          issuer: accounts[destinationIssuer].account.address\n        },\n        currency: \"AUR\",\n        issuer: accounts[destinationIssuer].account.address,\n        value: \"1\",\n        id: 8,\n        source_account: accounts[account].account.address,\n        subcommand: \"create\"\n      }))\n    }\n\n    ws.onmessage = event => {\n      const message = JSON.parse(event.data)\n      setPaths(message)\n    }\n\n    ws.onclose = () => {\n      console.log(`Disconnected from ${WEBSOCKET_SERVER}`)\n    }\n\n    return () => {\n      ws.close()\n    }\n  }, [account, destination, destinationIssuer, sendMaxIssuer, accounts, destinationCurrency, destinationValue])\n\n  const submit = async () => {\n    setLoading(true)\n    const amount = {\n      currency: destinationCurrency,\n      issuer: accounts[destinationIssuer].account.address,\n      value: destinationValue.toString()\n    }\n    await api.connect()\n    const response = await updateEdges(\n      accounts[account].account,\n      accounts[destination].account.address,\n      amount\n    )\n    alert(JSON.stringify(response))\n    await api.disconnect()\n    setLoading(false)\n  }\n\n  const onChangeAccount = async (event) => {\n    const value = event.target.value\n    setAccount(value)\n  }\n\n  const onChangeDestination = async (event) => {\n    const value = event.target.value\n    setDestination(value)\n  }\n\n  const onChangeDestinationAmount = async (event) => {\n    const value = event.target.value\n    setDestinationValue(value)\n  }\n\n  const onChangeDestinationCurrency = async (event) => {\n    const value = event.target.value\n    setDestinationCurrency(value)\n  }\n\n  const onChangeDestinationIssuer = async (event) => {\n    const value = event.target.value\n    setDestinationIssuer(value)\n  }\n\n  const onChangeSendMaxValue = async (event) => {\n    const value = event.target.value\n    setSendMaxValue(value)\n  }\n\n  const onChangeSendMaxCurrency = async (event) => {\n    const value = event.target.value\n    setSendMaxCurrency(value)\n  }\n\n  const onChangeSendMaxIssuer = async (event) => {\n    const value = event.target.value\n    setSendMaxIssuer(value)\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <h4>Payment Form</h4>\n          <p className=\"text-muted border rounded p-3\">\n            <span className=\"fa fa-info-circle\" /> Use node IDs instead of account addresses.\n          </p>\n          <Form>\n            <h4>Source</h4>\n            <Row className=\"mb-3\">\n              <Form.Group as={Col}>\n                <Form.Label>Source Account</Form.Label>\n                <Form.Control type=\"text\" onChange={onChangeAccount} defaultValue={account} />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Max Amount</Form.Label>\n                <Form.Control type=\"number\" onChange={onChangeSendMaxValue} defaultValue={sendMaxValue} />\n              </Form.Group>\n            </Row>\n            <Row className=\"mb-3\">\n              <Form.Group as={Col}>\n                <Form.Label>Currency</Form.Label>\n                <Form.Control type=\"text\" onChange={onChangeSendMaxCurrency} defaultValue={sendMaxCurrency} />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Issuer</Form.Label>\n                <Form.Control type=\"text\" onChange={onChangeSendMaxIssuer} defaultValue={sendMaxIssuer} />\n              </Form.Group>\n            </Row>\n            <h4>Destination</h4>\n            <Row className=\"mb-3\">\n              <Form.Group as={Col}>\n                <Form.Label>Destination Account</Form.Label>\n                <Form.Control type=\"text\" onChange={onChangeDestination} defaultValue={destination} />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Destination Amount</Form.Label>\n                <Form.Control type=\"number\" onChange={onChangeDestinationAmount} defaultValue={destinationValue} />\n              </Form.Group>\n            </Row>\n            <Row className=\"mb-3\">\n              <Form.Group as={Col}>\n                <Form.Label>Destination Currency</Form.Label>\n                <Form.Control type=\"text\" onChange={onChangeDestinationCurrency} defaultValue={destinationCurrency} />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Destination Issuer</Form.Label>\n                <Form.Control type=\"text\" onChange={onChangeDestinationIssuer} defaultValue={destinationIssuer} />\n              </Form.Group>\n            </Row>\n          </Form>\n          <Button variant=\"primary\" onClick={submit} disabled={loading}>\n            { loading ? <i className=\"fas fa-spin fa-spinner\" /> : \"Submit\" }\n          </Button>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Valid Paths</h4>\n          <pre className=\"bg-light p-5\">\n            {JSON.stringify(paths, null, 2)}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Validator;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\"\nimport { Badge } from \"react-bootstrap\"\nimport Home from \"./pages/Home\"\nimport Explorer from \"./pages/Explorer\"\nimport Builder from \"./pages/Builder\"\nimport Validator from \"./pages/Validator\"\nimport './App.css';\n\nfunction App() {\n  const download = () => {\n    const exportData = [\"graph\", \"accounts\"]\n    exportData.forEach(type => {\n      const data = JSON.stringify(localStorage.getItem(type))\n      const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(data);\n      const downloadAnchorNode = document.createElement('a');\n      downloadAnchorNode.setAttribute(\"href\", dataStr);\n      downloadAnchorNode.setAttribute(\"download\", type + \".json\");\n      document.body.appendChild(downloadAnchorNode); // Required for Firefox\n      downloadAnchorNode.click();\n      downloadAnchorNode.remove();\n    })\n  }\n  return (\n    <div className=\"App\">\n      <Router>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"/\">\n              RippleGraph <Badge bg=\"primary\" pill>BETA</Badge>\n            </a>\n            <>\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" activeClassName=\"active\" aria-current=\"page\" to=\"/explorer\">Explorer</NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" activeClassName=\"active\" aria-current=\"page\" to=\"/builder\">Builder</NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" activeClassName=\"active\" aria-current=\"page\" to=\"/validator\">Validator</NavLink>\n                  </li>\n                </ul>\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" id=\"downloadAnchorElem\" onClick={download}>Download</button>\n              </div>\n            </>\n          </div>\n        </nav>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/explorer\">\n            <Explorer />\n          </Route>\n          <Route path=\"/builder\">\n            <Builder />\n          </Route>\n          <Route path=\"/validator\">\n            <Validator />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}