{"version":3,"sources":["pages/Explorer/index.js","xrpl.js","util.js","graph.js","components/CreateNodeModal.js","components/CreateTrustLineModal.js","pages/Builder/index.js","pages/Validator/index.js","App.js","reportWebVitals.js","index.js"],"names":["serialized","JSON","parse","window","localStorage","getItem","Explorer","LAST_VALIDATED_LEDGER","svgRef","React","useRef","useEffect","color","d3","label","nodes","forEach","d","i","push","node","links","source","target","labelLayout","force","strength","distance","graphLayout","innerWidth","innerHeight","id","on","call","updateNode","link","updateLink","alphaTarget","restart","labelNode","each","x","y","b","this","getBBox","diffX","diffY","dist","Math","sqrt","shiftX","width","max","min","setAttribute","adjlist","neigh","a","index","svg","attr","container","append","style","scaleExtent","event","transform","selectAll","data","enter","group","datum","o","document","getElementById","bootstrap","title","content","stringify","rippleState","show","getInstance","dispose","sourceEvent","stopPropagation","active","fx","fy","text","fixna","isFinite","remove","ref","height","className","sleep","ms","Promise","resolve","setTimeout","api","RippleAPI","server","createAccount","address","generateAddress","test","axios","method","headers","destination","classicAddress","xrpAmount","hasTrustLine","counterparty","getTrustlines","trustlines","some","trustline","specification","createTrustLine","account","console","log","tx","currency","limit","qualityIn","qualityOut","ripplingDisabled","frozen","memos","type","format","prepareTrustline","preparedTx","maxLedgerVersion","instructions","response","sign","txJSON","secret","txID","txBlob","signedTransaction","submit","result","resultCode","resultMessage","getLedgerVersion","latestLedgerVersion","earliestLedgerVersion","validateTransaction","enableRippling","prepareSettings","defaultRipple","prepared","checkTransaction","setInterval","getTransaction","minLedgerVersion","clearInterval","outcome","message","getTrustLines","deleteAccount","prepareTransaction","TransactionType","fee","makePayment","sender","receiver","amount","Account","Amount","Destination","LastLedgerSequence","ledger","ledgerVersion","saved","graph","Graph","createNode","accounts","newAccounts","setItem","Error","addNode","serialize","createEdge","addEdge","setEdgeWeight","adjacent","edge","removeEdge","removeNode","updateEdges","CreateNodeModal","handleClose","useState","loading","setLoading","setData","handleSave","connect","disconnect","Modal","onHide","Header","Title","Body","Form","Group","controlId","Label","Control","onChange","value","toUpperCase","replace","name","Check","checked","Footer","Button","variant","onClick","disabled","CreateTrustLineModal","selectedNode","setTarget","setLimit","Builder","history","useHistory","path","useRouteMatch","undefined","setSelectedNode","showCreateNodeModal","setShowNodeModal","showTrustLineModal","setShowTrustLineModal","accountTrustLines","setAccountTrustLines","setAccounts","hasAccounts","Object","keys","length","location","useLocation","trustLines","pathname","match","RegExp","split","ListGroup","as","map","Item","Validator","query","URLSearchParams","search","get","setAccount","destinationCurrency","setDestinationCurrency","destinationValue","setDestinationValue","destinationIssuer","setDestinationIssuer","setDestination","issuer","toString","alert","onChangeAccount","onChangeDestination","onChangeDestinationAmount","onChangeDestinationCurrency","onChangeDestinationIssuer","defaultValue","App","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","activeClassName","aria-current","to","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.400446d4.chunk.js","sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\";\nimport * as bootstrap from \"bootstrap\"\nimport './index.css';\n\nconst serialized = JSON.parse(window.localStorage.getItem(\"graph\"))\n\nfunction Explorer() {\n  const svgRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    // ?\n    const label = {\n      'nodes': [],\n      'links': []\n    };\n    \n    // ?\n    serialized.nodes.forEach(function(d, i) {\n      label.nodes.push({ node: d });\n      label.nodes.push({ node: d });\n      label.links.push({\n        source: i * 2,\n        target: i * 2 + 1\n      });\n    });\n\n    var labelLayout = d3.forceSimulation(label.nodes)\n      .force(\"charge\", d3.forceManyBody().strength(-50))\n      .force(\"link\", d3.forceLink(label.links).distance(0).strength(2));\n\n    var graphLayout = d3.forceSimulation(serialized.nodes)\n      .force(\"charge\", d3.forceManyBody().strength(-3000))\n      .force(\"center\", d3.forceCenter(window.innerWidth / 2, window.innerHeight / 2))\n      .force(\"x\", d3.forceX(window.innerWidth / 2).strength(1))\n      .force(\"y\", d3.forceY(window.innerHeight / 2).strength(1))\n      .force(\"link\", d3.forceLink(serialized.links).id(function(d) { return d.id; }).distance(50).strength(1))\n      .on(\"tick\", ticked);\n\n    var adjlist = [];\n\n    serialized.links.forEach(function(d) {\n      adjlist[d.source.index + \"-\" + d.target.index] = true;\n      adjlist[d.target.index + \"-\" + d.source.index] = true;\n    });\n    \n    /**\n     * @function neigh\n     * @param {*} a \n     * @param {*} b \n     * @returns \n     */\n    function neigh(a, b) {\n      return a === b || adjlist[a + \"-\" + b];\n    }\n    \n    // Create graph container\n    var svg = d3.select(\"svg\").attr(\"width\", \"100%\").attr(\"height\", \"100%\");\n    var container = svg.append(\"g\");\n\n    // Define the arrowhead graphic\n    svg.append(\"defs\").append(\"marker\")\n      .attr(\"id\", \"arrowhead\")\n      .attr(\"viewBox\", \"-0 -5 35 10\")\n      .attr(\"refX\", 20)\n      .attr(\"refY\", 0)\n      .attr(\"orient\", \"auto\")\n      .attr(\"markerWidth\", 15)\n      .attr(\"markerHeight\", 15)\n      .attr(\"xoverflow\", \"visible\")\n      .append(\"svg:path\")\n      .attr(\"d\", \"M 0,-5 L 10 ,0 L 0,5\")\n      .attr(\"fill\", \"#999\")\n      .style(\"stroke\", \"none\");\n    \n    // Define zoom settings\n    svg.call(\n      d3.zoom()\n        .scaleExtent([.1, 4])\n        .on(\"zoom\", function(event) { container.attr(\"transform\", event.transform); })\n    );\n    \n    // Create links\n    var link = container.append(\"g\").attr(\"class\", \"links\")\n      .selectAll(\"line\")\n      .data(serialized.links)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke\", \"#aaa\")\n      .attr(\"stroke-width\", \"1px\")\n      .attr(\"id\", function(d, i) { return \"link-\" + i })\n      .attr('marker-end', 'url(#arrowhead)');\n\n    // Create nodes\n    var node = container.append(\"g\").attr(\"class\", \"nodes\")\n      .selectAll(\"g\")\n      .data(serialized.nodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"r\", 5)\n      .attr(\"fill\", function(d) { return color(d.group); })\n    \n    // Events\n    node.on(\"mouseover\", focus).on(\"mouseout\", unfocus);\n    link.on(\"mouseover\", showRippleState).on(\"mouseout\", hideRippleState);\n    \n    node.call(\n      d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended)\n    );\n\n    // Label the nodes\n    var labelNode = container.append(\"g\").attr(\"class\", \"labelNodes\")\n      .selectAll(\"text\")\n      .data(label.nodes)\n      .enter()\n      .append(\"text\")\n      .text(function(d, i) { return i % 2 === 0 ? \"\" : d.node.id; })\n      .style(\"fill\", \"#555\")\n      .style(\"font-family\", \"Arial\")\n      .style(\"font-size\", 12)\n      .style(\"pointer-events\", \"none\"); // to prevent mouseover/drag capture\n    \n    /**\n     * @function ticked\n     */\n    function ticked() {\n    \n      node.call(updateNode);\n      link.call(updateLink);\n    \n      labelLayout.alphaTarget(0.3).restart();\n      labelNode.each(function(d, i) {\n        if(i % 2 === 0) {\n          d.x = d.node.x;\n          d.y = d.node.y;\n        } else {\n          var b = this.getBBox();\n    \n          var diffX = d.x - d.node.x;\n          var diffY = d.y - d.node.y;\n\n          var dist = Math.sqrt(diffX * diffX + diffY * diffY);\n\n          var shiftX = b.width * (diffX - dist) / (dist * 2);\n          shiftX = Math.max(-b.width, Math.min(0, shiftX));\n          var shiftY = 16;\n          this.setAttribute(\"transform\", \"translate(\" + shiftX + \",\" + shiftY + \")\");\n        }\n      });\n      labelNode.call(updateNode);\n    }\n    \n    /**\n     * @function fixna\n     * @param {*} x \n     * @returns \n     */\n    function fixna(x) {\n      if (isFinite(x)) return x;\n      return 0;\n    }\n    \n    /**\n     * @function focus\n     * @param {*} event \n     * @param {*} d \n     */\n    function focus(event, d) {\n      var index = d3.select(event.target).datum().index;\n      node.style(\"opacity\", function(o) {\n        return neigh(index, o.index) ? 1 : 0.1;\n      });\n      labelNode.attr(\"display\", function(o) {\n      return neigh(index, o.node.index) ? \"block\": \"none\";\n      });\n      link.style(\"opacity\", function(o) {\n        return o.source.index === index || o.target.index === index ? 1 : 0.1;\n      });\n    }\n    \n    /**\n     * @function unfocus\n     */\n    function unfocus() {\n      labelNode.attr(\"display\", \"block\");\n      node.style(\"opacity\", 1);\n      link.style(\"opacity\", 1);\n    }\n\n    /**\n     * @function showRippleState\n     * @param {*} event \n     * @param {*} d \n     */\n    function showRippleState(event, d) {\n      var link = document.getElementById(event.target.id)\n      var popover = new bootstrap.Popover(link, {\n        title: \"RippleState\",\n        content: `${JSON.stringify(d.rippleState, null, 2)}`\n      })\n      popover.show()\n    }\n\n    /**\n     * @function hideRippleState\n     * @param {*} event \n     * @param {*} d \n     */\n    function hideRippleState(event, d) {\n      var link = document.getElementById(event.target.id)\n      var popover = bootstrap.Popover.getInstance(link)\n      popover.dispose()\n    }\n    \n    /**\n     * @function updateLink\n     * @param {*} link \n     */\n    function updateLink(link) {\n      link.attr(\"x1\", function(d) { return fixna(d.source.x); })\n        .attr(\"y1\", function(d) { return fixna(d.source.y); })\n        .attr(\"x2\", function(d) { return fixna(d.target.x); })\n        .attr(\"y2\", function(d) { return fixna(d.target.y); });\n    }\n    \n    /**\n     * @function updateNode\n     * @param {*} node \n     */\n    function updateNode(node) {\n      node.attr(\"transform\", function(d) {\n        return \"translate(\" + fixna(d.x) + \",\" + fixna(d.y) + \")\";\n      });\n    }\n    \n    /**\n     * @function dragstarted\n     * @param {*} event \n     * @param {*} d \n     */\n    function dragstarted(event, d) {\n      event.sourceEvent.stopPropagation();\n      if (!event.active) graphLayout.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    \n    /**\n     * @function dragged\n     * @param {*} event \n     * @param {*} d \n     */\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    \n    /**\n     * @function dragended\n     * @param {*} event \n     * @param {*} d \n     */\n    function dragended(event, d) {\n      if (!event.active) graphLayout.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    return () => { d3.selectAll(\"svg > *\").remove(); }\n  }, [])\n\n  return (\n    <svg ref={svgRef} width=\"100vw\" height=\"100vh\" className=\"Graph\" />\n  );\n}\n\nexport default Explorer;\n","import { RippleAPI } from \"ripple-lib\"\nimport axios from \"axios\"\nimport { sleep } from \"./util\"\n\nlet LAST_VALIDATED_LEDGER;\n\nexport const api = new RippleAPI({\n  server: 'wss://s.altnet.rippletest.net:51233'\n});\n\napi.on(\"ledger\", async (ledger) => {\n  LAST_VALIDATED_LEDGER = ledger.ledgerVersion\n  console.log(\"Ledger version\", ledger.ledgerVersion, \"was validated.\")\n})\n\nexport async function createAccount() {\n  const address = api.generateAddress({ test: true })\n  await axios(\"https://faucet.altnet.rippletest.net/accounts\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: {\n      destination: address.classicAddress,\n      xrpAmount: \"100\"\n    }\n  })\n  await sleep(10000)\n  return address\n}\n\nexport async function hasTrustLine(address, counterparty) {\n  const trustlines = await api.getTrustlines(address)\n  return trustlines.some(trustline => trustline.specification.counterparty === counterparty)\n}\n\nexport async function createTrustLine(account, counterparty) {\n  console.log(`Creating trust line from ${account.address} to ${counterparty}`)\n  const tx = {\n    currency: \"AUR\",\n    counterparty: counterparty,\n    limit: \"999999999\",\n    qualityIn: 1,\n    qualityOut: 1,\n    ripplingDisabled: false,\n    frozen: false,\n    memos: [\n      {\n        type: \"test\",\n        format: \"text/plain\",\n        data: \"Apex Dev Summit\"\n      }\n    ]\n  }\n  const preparedTx = await api.prepareTrustline(account.address, tx)\n  const maxLedgerVersion = preparedTx.instructions.maxLedgerVersion\n  const response = api.sign(preparedTx.txJSON, account.secret)\n  const txID = response.id\n  console.log(\"Identifying hash:\", txID)\n  const txBlob = response.signedTransaction\n  console.log(\"Signed blob:\", txBlob)\n  const result = await api.submit(txBlob)\n  console.log(\"Tentative result code:\", result.resultCode)\n  console.log(\"Tentative result message:\", result.resultMessage)\n  const latestLedgerVersion = await api.getLedgerVersion()\n  const earliestLedgerVersion = latestLedgerVersion + 1\n  await validateTransaction(\n    txID,\n    earliestLedgerVersion,\n    maxLedgerVersion\n  )\n}\n\nexport async function enableRippling(account) {\n  console.log(`Enabling rippling for ${account.address}`)\n  const prepared = await api.prepareSettings(account.address, { defaultRipple: true })\n  const maxLedgerVersion = prepared.instructions.maxLedgerVersion\n  const response = api.sign(prepared.txJSON, account.secret)\n  const txID = response.id\n  const txBlob = response.signedTransaction\n  const result = await api.submit(txBlob)\n  console.log(result.resultCode, result.resultMessage)\n  const latestLedgerVersion = await api.getLedgerVersion()\n  const earliestLedgerVersion = latestLedgerVersion + 1\n  await validateTransaction(\n    txID,\n    earliestLedgerVersion,\n    maxLedgerVersion\n  )\n}\n\nexport async function validateTransaction(\n  txID,\n  earliestLedgerVersion,\n  maxLedgerVersion\n) {\n  return new Promise((resolve) => {\n    const checkTransaction = setInterval(async () => {\n      try {\n        const tx = await api.getTransaction(txID, {\n          minLedgerVersion: earliestLedgerVersion\n        })\n        clearInterval(checkTransaction)\n        if (tx.outcome.result !== \"tesSUCCESS\") resolve(false)\n        resolve(true)\n      } catch (error) {\n        const message =\n          \"Transaction has not been validated yet; try again later\"\n        if (error.message === message) return\n      }\n\n      if (LAST_VALIDATED_LEDGER > maxLedgerVersion) {\n        clearInterval(checkTransaction)\n        resolve(false)\n      }\n    }, 1000)\n  })\n}\n\nexport async function getSettings(address) {\n  return await api.getSettings(address)\n}\n\n/**\n * @function getTrustLines\n */\n export async function getTrustLines(address) {\n  return await api.getTrustlines(address)\n}\n\nexport async function deleteAccount(account) {\n  const preparedTx = await api.prepareTransaction({\n    TransactionType: \"AccountDelete\"\n  })\n  const maxLedgerVersion = preparedTx.instructions.maxLedgerVersion\n  console.log(\"preparedTx:\", preparedTx)\n  console.log(\"Transaction cost:\", preparedTx.instructions.fee, \"XRP\")\n  console.log(\"Transaction expires after ledger:\", maxLedgerVersion)\n  const response = api.sign(preparedTx.txJSON, account.secret)\n  const txID = response.id\n  console.log(\"Identifying hash:\", txID)\n  const txBlob = response.signedTransaction\n  console.log(\"Signed blob:\", txBlob)\n  const result = await api.submit(txBlob)\n  console.log(\"Tentative result code:\", result.resultCode)\n  console.log(\"Tentative result message:\", result.resultMessage)\n  const latestLedgerVersion = await api.getLedgerVersion()\n  const earliestLedgerVersion = latestLedgerVersion + 1\n  await validateTransaction(\n    txID,\n    earliestLedgerVersion,\n    maxLedgerVersion\n  )\n}\n\nexport async function makePayment(\n  sender,\n  receiver,\n  amount\n) {\n  let latestLedgerVersion = await api.getLedgerVersion()\n  const tx = {\n    TransactionType: \"Payment\",\n    Account: sender.address,\n    Amount: amount,\n    Destination: receiver,\n    LastLedgerSequence: latestLedgerVersion + 15\n  }\n  const preparedTx = await api.prepareTransaction(tx)\n  const maxLedgerVersion = preparedTx.instructions.maxLedgerVersion\n  console.log(\"preparedTx:\", preparedTx)\n  console.log(\"Transaction cost:\", preparedTx.instructions.fee, \"XRP\")\n  console.log(\"Transaction expires after ledger:\", maxLedgerVersion)\n  const response = api.sign(preparedTx.txJSON, sender.secret)\n  const txID = response.id\n  console.log(\"Identifying hash:\", txID)\n  const txBlob = response.signedTransaction\n  console.log(\"Signed blob:\", txBlob)\n  latestLedgerVersion = await api.getLedgerVersion()\n  const result = await api.submit(txBlob)\n  if (result.resultCode !== \"tesSUCCESS\") return result\n  console.log(\"Tentative result code:\", result.resultCode)\n  console.log(\"Tentative result message:\", result.resultMessage)\n  const earliestLedgerVersion = latestLedgerVersion + 1\n  return await validateTransaction(\n    txID,\n    earliestLedgerVersion,\n    maxLedgerVersion\n  )\n}","export function sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}","import Graph from \"graph-data-structure\";\nimport {\n  createAccount,\n  hasTrustLine,\n  createTrustLine,\n  enableRippling,\n  deleteAccount,\n  makePayment\n} from \"./xrpl\"\n\nconst saved = window.localStorage.getItem(\"graph\")\nconst graph = Graph(JSON.parse(saved));\n\nexport async function createNode(data) {\n  const { id, defaultRipple } = data;\n  let accounts = window.localStorage.getItem(\"accounts\")\n\n  if (!accounts) {\n    accounts = {}\n  } else {\n    accounts = JSON.parse(accounts)\n  }\n\n  if (!accounts[id]) {\n    const account = await createAccount()\n    if (!defaultRipple) await enableRippling(account)\n    accounts[id] = { account, defaultRipple }\n    const newAccounts = JSON.stringify(accounts, null, 2);\n    window.localStorage.setItem(\"accounts\", newAccounts)\n    console.log(`${id}:`, account.address)\n  } else {\n    throw Error(\"An account with this ID already exists.\")\n  }\n  graph.addNode(id);\n  window.localStorage.setItem(\"graph\", JSON.stringify(graph.serialize()))\n}\n\nexport async function createEdge(source, target, limit) {\n  let accounts = window.localStorage.getItem(\"accounts\")\n\n  if (!accounts) {\n    accounts = {}\n  } else {\n    accounts = JSON.parse(accounts)\n  }\n\n  if (!await hasTrustLine(accounts[source].account.address, accounts[target].account.address)) {\n    await createTrustLine(accounts[source].account, accounts[target].account.address)\n  }\n  graph.addEdge(source, target);\n  graph.setEdgeWeight(source, target, 0)\n  window.localStorage.setItem(\"graph\", JSON.stringify(graph.serialize()))\n}\n\nexport async function removeNode(id) {\n  let accounts = JSON.parse(window.localStorage.getItem(\"accounts\"))\n  await deleteAccount(accounts[id].account)\n  const edges = graph.adjacent(id)\n  edges.forEach(edge => {\n    graph.removeEdge(id, edge)\n  })\n  graph.removeNode(id)\n  window.localStorage.setItem(\"graph\", JSON.stringify(graph.serialize()))\n  delete accounts[id]\n  window.localStorage.setItem(\"accounts\", JSON.stringify(accounts))\n}\n\nexport async function updateEdges(source, destination, amount) {\n  return await makePayment(source, destination, amount)\n}\n\nexport default graph","import React from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\"\nimport { createNode } from \"../graph\"\nimport { api } from \"../xrpl\"\n\nfunction CreateNodeModal({ show, handleClose }) {\n  const [loading, setLoading] = React.useState(false)\n  const [data, setData] = React.useState({\n    id: \"\",\n    defaultRipple: false\n  })\n\n  const onChangeInput = (event) => {\n    event.target.value = event.target.value.toUpperCase().replace(\" \", \"_\").replace(/[\\W]+/g, \"\");\n    setData({\n      ...data,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  const onChangeCheckbox = (event) => {\n    setData({\n      ...data,\n      [event.target.name]: event.target.checked\n    })\n  }\n\n  const handleSave = async () => {\n    setLoading(true)\n    await api.connect()\n    await createNode(data)\n    await api.disconnect()\n    setLoading(false)\n    handleClose()\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header>\n        <Modal.Title>Create Node</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"node.Id\">\n            <Form.Label>Identifier</Form.Label>\n            <Form.Control type=\"text\" onChange={onChangeInput} name=\"id\" />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"node.defaultRipple\">\n            <Form.Check\n              name=\"defaultRipple\"\n              type=\"checkbox\"\n              label={\"No Ripple\"}\n              onChange={onChangeCheckbox}\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose} disabled={loading}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSave} disabled={loading}>\n          { loading ? <i className=\"fas fa-spin fa-spinner\"></i> : \"Save\" }\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default CreateNodeModal;\n","import React from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\"\nimport { createEdge } from \"../graph\"\n\nfunction CreateTrustLineModal({ show, handleClose, selectedNode }) {\n  const [loading, setLoading] = React.useState(false)\n  const [target, setTarget] = React.useState()\n  const [limit, setLimit] = React.useState()\n\n  const onChangeTarget = (event) => {\n    event.target.value = event.target.value.toUpperCase().replace(\" \", \"_\").replace(/[\\W]+/g, \"\");\n    setTarget(event.target.value)\n  }\n\n  const onChangeLimit = (event) => {\n    setLimit(event.target.value)\n  }\n\n  const handleSave = async () => {\n    setLoading(true)\n    await createEdge(selectedNode, target, limit)\n    setLoading(false)\n    handleClose()\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header>\n        <Modal.Title>Create Trust Line</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"node.Id\">\n            <Form.Label>Source Node</Form.Label>\n            <Form.Control type=\"text\" name=\"source\" value={selectedNode} disabled={true} />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"node.Id\">\n            <Form.Label>Target Node</Form.Label>\n            <Form.Control type=\"text\" onChange={onChangeTarget} name=\"target\" />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"node.Limit\">\n            <Form.Label>Limit</Form.Label>\n            <Form.Control type=\"number\" onChange={onChangeLimit} name=\"limit\" />\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose} disabled={loading}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" onClick={handleSave} disabled={loading}>\n          { loading ? <i className=\"fas fa-spin fa-spinner\"></i> : \"Save\" }\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default CreateTrustLineModal;\n","import React from \"react\";\nimport { Switch, Route, useRouteMatch, useLocation, useHistory } from \"react-router-dom\";\nimport { Button, ListGroup } from \"react-bootstrap\"\nimport CreateNodeModal from \"../../components/CreateNodeModal\";\nimport CreateTrustLineModal from \"../../components/CreateTrustLineModal\";\nimport { api, getTrustLines } from \"../../xrpl\"\nimport { removeNode } from \"../../graph\"\nimport \"./index.css\"\n\nfunction Builder() {\n  const history = useHistory();\n  const { path } = useRouteMatch();\n  const [selectedNode, setSelectedNode] = React.useState(undefined)\n  const [showCreateNodeModal, setShowNodeModal] = React.useState(false);\n  const [showTrustLineModal, setShowTrustLineModal] = React.useState(false);\n  const [accountTrustLines, setAccountTrustLines] = React.useState(undefined)\n  const [accounts, setAccounts] = React.useState(JSON.parse(window.localStorage.getItem(\"accounts\")) || {});\n  const hasAccounts = Object.keys(accounts).length !== 0\n  const location = useLocation();\n\n  const handleCloseCreateNodeModal = () => {\n    setShowNodeModal(false);\n    setAccounts(JSON.parse(window.localStorage.getItem(\"accounts\")))\n  }\n  const handleShowNodeModal = () => setShowNodeModal(true);\n\n  const handleCloseTrustLineModal = () => {\n    setShowTrustLineModal(false);\n    setAccounts(JSON.parse(window.localStorage.getItem(\"accounts\")))\n  }\n  const handleShowTrustLineModal = () => setShowTrustLineModal(true);\n\n  const goToValidator = () => {\n    history.push(`/validator?account=${selectedNode}`);\n  }\n\n  /**\n   * Fetch node info when selected\n   */\n  React.useEffect(() => {\n    (async () => {\n      if (selectedNode) {\n        await api.connect()\n        const trustLines = await getTrustLines(accounts[selectedNode].account.address)\n        setAccountTrustLines(trustLines)\n        await api.disconnect()\n      }\n    })()\n  }, [selectedNode, accounts])\n\n  /**\n   * Check if a node is already selected on page load\n   */\n  React.useEffect(() => {\n    if (location.pathname.match(new RegExp(\"/builder/*.\"))) {\n      setSelectedNode(location.pathname.split(\"/\")[2])\n    }\n  }, [location.pathname])\n\n  return (\n    <div className=\"container-fluid mt-5\">\n      <CreateNodeModal show={showCreateNodeModal} handleClose={handleCloseCreateNodeModal} />\n      <CreateTrustLineModal show={showTrustLineModal} handleClose={handleCloseTrustLineModal} selectedNode={selectedNode} />\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <h4>Nodes</h4>\n          <p className=\"text-muted\">Please select a node from the list below or create a new node.</p>\n          <ListGroup as=\"ul\">\n            {\n              hasAccounts ? (\n                Object.keys(accounts).map(id => (\n                  <ListGroup.Item as=\"li\" active={window.location.pathname === `/builder/${id}`} key={id} onClick={() => { setSelectedNode(id); history.push(`/builder/${id}`) }}>\n                    {id}\n                  </ListGroup.Item>\n                ))\n              ) : (\n                \"No nodes created.\"\n              )\n            }\n          </ListGroup>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"secondary\" className=\"mt-5\" onClick={handleShowNodeModal}>\n              Create Node\n            </Button>\n          </div>\n        </div>\n        <div className=\"col-6 bg-light px-5 py-5\">\n          <Switch>\n            <Route path={`${path}/:nodeId`}>\n              <h5>Account</h5>\n                <pre>\n                  {JSON.stringify(accounts[selectedNode], null, 2)}\n                </pre>\n              <h5 className=\"mt-5\">Trust Lines</h5>\n              {\n                accountTrustLines ? (\n                  <pre>\n                    {JSON.stringify(accountTrustLines, null, 2)}\n                  </pre>\n                ) : (\n                  \"No account trust lines.\"\n                )\n              }\n            </Route>\n          </Switch>\n        </div>\n        <div className=\"col-3\">\n          <h4 className=\"mb-3\">Actions</h4>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" className=\"mb-3\" disabled={!selectedNode} onClick={handleShowTrustLineModal}>\n              Create Trust Line\n            </Button>\n          </div>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" className=\"mb-3\" disabled={!selectedNode} onClick={goToValidator}>\n            Send Payment\n            </Button>\n          </div>\n          <div className=\"d-grid gap-2\">\n            <Button variant=\"primary\" className=\"mb-3\" disabled={!selectedNode} onClick={() => { removeNode(selectedNode) }}>\n            Delete Account\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Builder;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Button, Form } from \"react-bootstrap\"\nimport { updateEdges } from \"../../graph\"\nimport { api } from \"../../xrpl\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction Validator() {\n  const query = useQuery();\n  const [loading, setLoading] = React.useState(false)\n  const [account, setAccount] = React.useState(query.get(\"account\"))\n  const [destinationCurrency, setDestinationCurrency] = React.useState(\"AUR\")\n  const [destinationValue, setDestinationValue] = React.useState(1)\n  const [destinationIssuer, setDestinationIssuer] = React.useState(\"\")\n  const [sendMaxCurrency, setSendMaxCurrency] = React.useState(\"AUR\")\n  const [sendMaxValue, setSendMaxValue] = React.useState(1)\n  const [sendMaxIssuer, setSendMaxIssuer] = React.useState(\"\")\n  const [destination, setDestination] = React.useState(\"\")\n  const accounts = JSON.parse(localStorage.getItem(\"accounts\"))\n\n  const submit = async () => {\n    setLoading(true)\n    const amount = {\n      currency: destinationCurrency,\n      issuer: accounts[destinationIssuer].account.address,\n      value: destinationValue.toString()\n    }\n    await api.connect()\n    const response = await updateEdges(\n      accounts[account].account,\n      accounts[destination].account.address,\n      amount\n    )\n    alert(JSON.stringify(response))\n    await api.disconnect()\n    setLoading(false)\n  }\n\n  const onChangeAccount = async (event) => {\n    const value = event.target.value\n    setAccount(value)\n  }\n\n  const onChangeDestination = async (event) => {\n    const value = event.target.value\n    setDestination(value)\n  }\n\n  const onChangeDestinationAmount = async (event) => {\n    const value = event.target.value\n    setDestinationValue(value)\n  }\n\n  const onChangeDestinationCurrency = async (event) => {\n    const value = event.target.value\n    setDestinationCurrency(value)\n  }\n\n  const onChangeDestinationIssuer = async (event) => {\n    const value = event.target.value\n    setDestinationIssuer(value)\n  }\n\n  return (\n    <div className=\"container-fluid mt-5\">\n      <div className=\"row\">\n        <div className=\"col-4 offset-4\">\n          <h4>Validator</h4>\n          <Form>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Account</Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={onChangeAccount}\n                defaultValue={account}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Destination</Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={onChangeDestination}\n                defaultValue={destination}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Destination Amount</Form.Label>\n              <Form.Control\n                type=\"number\"\n                onChange={onChangeDestinationAmount}\n                defaultValue={destinationValue}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Destination Currency</Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={onChangeDestinationCurrency}\n                defaultValue={destinationCurrency}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Destination Issuer</Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={onChangeDestinationIssuer}\n                defaultValue={destinationIssuer}\n              />\n            </Form.Group>\n          </Form>\n          <Button variant=\"primary\" onClick={submit} disabled={loading}>\n            { loading ? <i className=\"fas fa-spin fa-spinner\" /> : \"Submit\" }\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Validator;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\"\nimport Explorer from \"./pages/Explorer\"\nimport Builder from \"./pages/Builder\"\nimport Validator from \"./pages/Validator\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"/#\">\n              RippleGraph\n            </a>\n            <>\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" activeClassName=\"active\" aria-current=\"page\" to=\"/explorer\">Explorer</NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" activeClassName=\"active\" aria-current=\"page\" to=\"/builder\">Builder</NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" activeClassName=\"active\" aria-current=\"page\" to=\"/validator\">Validator</NavLink>\n                  </li>\n                </ul>\n              </div>\n            </>\n          </div>\n        </nav>\n        <Switch>\n          <Route exact path=\"/\">\n            <Explorer />\n          </Route>\n          <Route path=\"/explorer\">\n            <Explorer />\n          </Route>\n          <Route path=\"/builder\">\n            <Builder />\n          </Route>\n          <Route path=\"/validator\">\n            <Validator />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}